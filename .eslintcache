[{"/Users/devanhare/movie-db-api/src/index.js":"1","/Users/devanhare/movie-db-api/src/reportWebVitals.js":"2","/Users/devanhare/movie-db-api/src/components/SearchMovies.js":"3","/Users/devanhare/movie-db-api/src/App.js":"4","/Users/devanhare/movie-db-api/src/components/MovieCard.js":"5"},{"size":500,"mtime":1608670431802,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1608667809526,"results":"8","hashOfConfig":"7"},{"size":2149,"mtime":1608679106823,"results":"9","hashOfConfig":"7"},{"size":301,"mtime":1608670425799,"results":"10","hashOfConfig":"7"},{"size":1569,"mtime":1608679236600,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"fuxmxw",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/devanhare/movie-db-api/src/index.js",[],["24","25"],"/Users/devanhare/movie-db-api/src/reportWebVitals.js",[],"/Users/devanhare/movie-db-api/src/components/SearchMovies.js",["26","27","28"],"import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Card, CardContent, Typography } from \"@material-ui/core\";\nimport MovieCard from \"./MovieCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: \"grid\",\n    [theme.breakpoints.up(\"md\")]: {\n      gridTemplateColumns: \"1fr auto\",\n      gridGap: \"1rem\",\n      alignItems: \"center\",\n    },\n  },\n  searchField: {\n    marginBottom: \"1rem\",\n    [theme.breakpoints.up(\"md\")]: {\n      marginBottom: 0,\n    },\n  },\n  button: {\n    height: \"100%\",\n  },\n  cardList: {\n    marginTop: \"4rem\",\n  },\n}));\n\nexport default function SearchMovies() {\n  const classes = useStyles();\n\n  //states - input query, movies\n  const [query, setQuery] = useState(\"\");\n  //create the state for movies, and update the state appropriate\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async (e) => {\n    e.preventDefault();\n\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=be2dc2a9158f693fd1b81d66bd3c7d54&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setMovies(data.results);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <form className={classes.form} onSubmit={searchMovies}>\n        <TextField\n          label=\"Movie Name\"\n          htmlFor=\"query\"\n          name=\"query\"\n          id=\"outlined-basic\"\n          placeholder=\"i.e. Jurassic Park\"\n          variant=\"outlined\"\n          className={classes.searchField}\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <Button\n          className={classes.button}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Search\n        </Button>\n      </form>\n      <div className={classes.cardList}>\n        {movies\n          .filter((movie) => movie.poster_path)\n          .map((movie) => (\n            <MovieCard movie={movie} />\n          ))}\n      </div>\n    </div>\n  );\n}\n","/Users/devanhare/movie-db-api/src/App.js",[],"/Users/devanhare/movie-db-api/src/components/MovieCard.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":4,"column":18,"nodeType":"35","messageId":"36","endLine":4,"endColumn":22},{"ruleId":"33","severity":1,"message":"37","line":4,"column":24,"nodeType":"35","messageId":"36","endLine":4,"endColumn":35},{"ruleId":"33","severity":1,"message":"38","line":4,"column":37,"nodeType":"35","messageId":"36","endLine":4,"endColumn":47},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'CardContent' is defined but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation"]